#! /bin/bash

# Variaveis
PWD="$(pwd)"
NOME=""
CFG="$(dirname $(readlink -f $0))/.cfg-tsd.txt"

# Checando os argumentos passados.
if [ -z "$1" -o "$1" = "-o" -o "$1" = "--no-remove" ];then
    echo "Download de Vídeos TS(Transmission multimidia)
para usar é preciso passar o link do vídeo e os argumentos"
    echo "."
    echo "."
    echo "  -o              Nome do arquivo de saída."
    echo "  --no-remove     não apagar as partes do vídeo, depois de concluído? (padrão apagar)."
    echo "."
    echo "."
    echo "Ex. ts-download https://cdn12.com/video1.ts -o saida.mp4 --no-remove"
    echo "."
    exit
fi

# Definido nome do arquivo, se não for especificado.
if [ "$2" = "-o" ];then
    NOME=$3
elif [ "$3" = "-o" ];then
    NOME=$4
elif [ -z "$NOME" ];then
    #echo "Vc não definiu o nome do aqruivo, usando parte do url.!"
    NOME="${1%/*}"
    NOME="${NOME##*/}.mp4"
fi
#-------------------------------------------------------
# Trata se nome definido já existir
if [ "$NOME" = "$(ls | grep "$NOME")" ];then
    echo -e "Já que tem um arquivo com mesmo nome! \n$(ls $NOME)"
    echo "."
    exit 2
fi

# Criando pasta temporaria para download dos videos.
mkdir "/tmp/tmp_vid_$$"
PASTA="/tmp/tmp_vid_$$"
VID_LS="/tmp/tmp_vid_$$/lista-videos.txt"
echo "Arquivos vão estar em $PWD"
echo .
echo ..
echo ...

# Erro de processamento da opção -o.
if [ "$2" = "-o" -a -z "$3" -o "$3" = "-o" -a -z "$4" ];then
    echo "Opção -o carece de uma string ex. '-o saida-video.mp4'"
    exit
fi
# ----------------------------------

# Comando de download.
if [ "${1##*\/}" = "index.m3u8" ];then
    curl -s -O --create-dirs --output-dir $PASTA $1
    if [ "$(xxd -l 8 $PASTA/index.m3u8 | awk '{print $6}')" != "#EXTM3U." ];then

        if [ -e "$PASTA/index.m3u8" ];then
            pass
        else
            echo "Arquivo ausente!! o link passado está correto?: ( $1 )"
            echo "Saindo!"
            exit 1
        fi
        echo "Link expirado ou o arquivo não é compátivel"
        echo
        cat $PASTA/index.m3u8 | head
        echo
        echo
        exit 1
    fi
    IND_FIM=$(tail -n 2 $PASTA/index.m3u8 | awk 'gsub("[a-zA-Z./#-]","")')
    if [ "$IND_FIM" -gt 100 ];then
        PRL="--parallel-max 10"
    else
        PRL="--parallel-max 4"
    fi


    curl -K $CFG $PRL --output-dir $PASTA -o "video#1" -w "file %{filename_effective}\n" "${1%\/*}/video[0-$IND_FIM].ts"  > $VID_LS

elif [ "${1##*\/}" = "icon.m3u8" ];then
    curl -s -O --create-dirs --output-dir $PASTA $1
    if [ $(xxd -l 8 $PASTA/icon.m3u8 | awk '{print $6}') != "#EXTM3U." ];then

        if [ -e "$PASTA/icon.m3u8" ];then
            pass
        else
            echo "Arquivo ausente!! o link passado está correto?:( $1 )"
            echo "Saindo!"
            exit 1
        fi
        echo "Link expirado ou o arquivo não é compátivel"
        echo
        cat $PASTA/icon.m3u8 | head
        echo
        echo
        exit 1
    fi
    IND_FIM=$(tail -n 2 $PASTA/icon.m3u8 | awk 'gsub("[a-zA-Z./#-]","")')
    if [ "$IND_FIM" -gt 100 ];then
        PRL="--parallel-max 10"
    else
        PRL="--parallel-max 4"
    fi

    curl -K $CFG $PRL --output-dir $PASTA -o "video#1" -r 55- -w "file %{filename_effective}\n" "${1%\/*}/icon[0-$IND_FIM].png" > $VID_LS
else
    echo "erro de url, passe uma url com final .m3u8"
    exit 1
fi

# Ordenar lista.
#sort -n -t: -k2 $VID_LS -o $VID_LS
sort -n $VID_LS -o $VID_LS
# -------
echo ".."
echo "."
# Juntando arquivos e terminando o processo
if [ -e "$VID_LS" ];then
    echo "Juntando os pedaços.."
    echo "..."
    ffmpeg -v 16 -f concat -safe 0 -i $VID_LS  -c copy "$NOME"
    if [ "$?" -eq 1 ];then
        echo "Saindo por erro na hora de juntar os pedaços com ffmpeg"
        exit 1
    fi
    echo "."
    if [ "$2" = "--no-remove" -o "$3" = "--no-remove" -o "$4" = "--no-remove" ];then
        echo "Pedaços baixado do vídeo em: $PASTA/"
        echo ".."
    else
        echo "Removendo pedaços do vídeo e pasta temporaria!"
        echo "."
        rm $PASTA/*.m3u8 $PASTA/video* $PASTA/*.txt
        rm -dv $PASTA
    fi
    echo "Nome e local do arquivo baixado:"
    echo "$PWD/$NOME"
fi
echo "Concluido!!"

exit 0
